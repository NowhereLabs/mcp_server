services:
  mcp-server:
    build: .
    container_name: rust-mcp-server
    ports:
      - "8080:8080"
    environment:
      # Logging configuration
      - RUST_LOG=rust_mcp_server=info,mcp_server=info
      - RUST_BACKTRACE=1
      
      # Real-time dashboard configuration
      - HEARTBEAT_INTERVAL_MS=500
      - STATUS_UPDATE_INTERVAL_MS=1000
      - METRICS_UPDATE_INTERVAL_MS=2000
      
      # Server configuration
      - DASHBOARD_PORT=8080
      - DASHBOARD_HOST=0.0.0.0
      
      # Security settings
      - MAX_TOOL_EXECUTION_TIME_MS=30000
      - MAX_CONCURRENT_TOOL_CALLS=10
      - MAX_FILE_SIZE_BYTES=10485760
      - ALLOWED_FILE_EXTENSIONS=txt,json,toml,yaml,yml,md,log
      
      # Rate limiting
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
      - RATE_LIMIT_BURST_SIZE=10
      
      # Resource limits  
      - MAX_HTTP_RESPONSE_SIZE_BYTES=5242880
      - HTTP_TIMEOUT_SECONDS=30
      
      # Production settings (disable debug features)
      - ENABLE_CORS=false
      - ENABLE_DEBUG_ROUTES=false
    command: ["./rust-mcp-server", "dashboard"]
    volumes:
      # Mount a temporary directory for file operations
      - /tmp/mcp-server:/tmp/mcp-server
      # Mount current directory for development (optional)
      - ./static:/app/static:ro
      - ./templates:/app/templates:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

  # Development version with debug features enabled
  mcp-server-dev:
    build: .
    container_name: rust-mcp-server-dev
    ports:
      - "8080:8080"
    environment:
      # Logging configuration (debug level for development)
      - RUST_LOG=rust_mcp_server=debug,mcp_server=debug
      - RUST_BACKTRACE=full
      
      # Real-time dashboard configuration (faster updates for development)
      - HEARTBEAT_INTERVAL_MS=250
      - STATUS_UPDATE_INTERVAL_MS=500
      - METRICS_UPDATE_INTERVAL_MS=1000
      
      # Server configuration
      - DASHBOARD_PORT=8080
      - DASHBOARD_HOST=0.0.0.0
      
      # Security settings (relaxed for development)
      - MAX_TOOL_EXECUTION_TIME_MS=60000
      - MAX_CONCURRENT_TOOL_CALLS=20
      - MAX_FILE_SIZE_BYTES=50485760
      - ALLOWED_FILE_EXTENSIONS=txt,json,toml,yaml,yml,md,log,rs,py,js,html,css
      
      # Rate limiting (relaxed for development)
      - RATE_LIMIT_REQUESTS_PER_MINUTE=1000
      - RATE_LIMIT_BURST_SIZE=100
      
      # Resource limits  
      - MAX_HTTP_RESPONSE_SIZE_BYTES=10485760
      - HTTP_TIMEOUT_SECONDS=60
      
      # Development settings (enable debug features)
      - ENABLE_CORS=true
      - ENABLE_DEBUG_ROUTES=true
    command: ["./rust-mcp-server", "dashboard"]
    volumes:
      # Mount a temporary directory for file operations
      - /tmp/mcp-server:/tmp/mcp-server
      # Mount current directory for development (optional)
      - ./static:/app/static:ro
      - ./templates:/app/templates:ro
      - ./.env:/app/.env:ro
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - development

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - mcp-server
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - production

networks:
  mcp-network:
    driver: bridge

volumes:
  mcp-data:
    driver: local